<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>weijiajin</title><link>https://weijiajin.com</link><description>你好哇，祝你今天愉快。</description><copyright>weijiajin</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://weijiajin.com/circle.svg</url><title>avatar</title><link>https://weijiajin.com</link></image><lastBuildDate>Thu, 11 Jul 2024 06:11:08 +0000</lastBuildDate><managingEditor>weijiajin</managingEditor><ttl>60</ttl><webMaster>weijiajin</webMaster><item><title>基于多模态数据与多级检索的重复缺陷报告检测方法</title><link>https://weijiajin.com/post/ji-yu-duo-mo-tai-shu-ju-yu-duo-ji-jian-suo-de-zhong-fu-que-xian-bao-gao-jian-ce-fang-fa.html</link><description>**摘  要:** 在软件工程领域,准确检测重复缺陷报告对提升缺陷管理效率及软件质量极为重要.传统方法依赖于缺陷报告的文本信息,但忽视了图片信息,这大大限制了检测的全面性和准确性.本研究提出一种基于多模态数据与多级检索的检测方法,融合信息检索和深度模型特征,增强了对多模态数据的处理.本文构建了一个包含图片的缺陷报告数据集,并开展了比较实验,包括传统文本数据集和多模态数据集.实验结果显示,加入图片数据显著提升了检测的准确度和召回率.本文方法在准确性与召回率上均优于现有技术,证实了图片数据在重复缺陷报告检测中的重要性,并为未来研究提供新视角.这项工作不仅揭示了技术提升的潜在方向,也为重复缺陷报告检测技术的探索和改进开辟了新路径.&#13;
&#13;
**关键词:** 多模态数据; 多级检索; 重复缺陷报告检测&#13;
&#13;
随着信息产业的迅猛发展、软件产业规模的不断扩大以及软件开发流程的愈加复杂, 软件缺陷是无法避免的[1].软件缺陷报告作为缺陷跟踪系统的实体之一,是描述软件缺陷、失效或不符合用户预期的软件表现的文档. 软件缺陷报告由文本信息和类别信息组成,其中文本信息使用自然语言对软件缺陷进行描述,而类别信息则通过枚举值确定缺陷报告的所属类别.现实中由于不同人员之间的信息不共享，往往会针对同一个软件缺陷各自提交缺陷报告,从而导致了缺陷报告重复问题[2].&#13;
缺陷报告在软件开发过程中起着至关重要的作用,而问题跟踪系统也成为管理缺陷报告的必要工具.重复的缺陷报告的存在可能会在错误分类和修复过程中增加额外的软件维护工作量[3]. 在实践中,识别重复的缺陷报告也可能很困难.例如,先前的研究[4]发现,有些重复的缺陷报告需要数千天才能被识别出来，涉及多达230条评论和75人。</description><guid isPermaLink="true">https://weijiajin.com/post/ji-yu-duo-mo-tai-shu-ju-yu-duo-ji-jian-suo-de-zhong-fu-que-xian-bao-gao-jian-ce-fang-fa.html</guid><pubDate>Wed, 10 Jul 2024 11:46:31 +0000</pubDate></item><item><title>脚本</title><link>https://weijiajin.com/post/jiao-ben.html</link><description>**开启root远程登录**&#13;
&#13;
```&#13;
sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config&#13;
sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config&#13;
systemctl restart sshd&#13;
```&#13;
&#13;
**安装docker**&#13;
```&#13;
curl -fsSL https://get.docker.com | bash -s docker&#13;
systemctl start docker&#13;
systemctl enable docker&#13;
```&#13;
&#13;
**BBR-PLUS脚本**&#13;
```&#13;
bash &lt;(curl -Lso- https://git.io/kernel.sh)&#13;
```&#13;
&#13;
**centos关闭防火墙**&#13;
```&#13;
systemctl stop firewalld&#13;
systemctl disable firewalld&#13;
```&#13;
**swap**&#13;
```&#13;
wget https://www.moerats.com/usr/shell/swap.sh &amp;&amp; bash swap.sh&#13;
azure swap&#13;
dd if=/dev/zero of=/swapfile count=4096 bs=1M&#13;
chmod 600 /swapfile&#13;
mkswap /swapfile&#13;
swapon /swapfile&#13;
vi /etc/fstab&#13;
/swapfile   none    swap    sw    0   0&#13;
```&#13;
**myip**&#13;
```&#13;
ip=$(curl -s http://myip.ipip.net)&#13;
echo 'My public IP address is: $ip'&#13;
```&#13;
**danate**&#13;
```&#13;
wget --no-check-certificate https://raw.github.com/Lozy/danted/master/install.sh -O install.sh&#13;
bash install.sh  --port=18888 --user=weijiajin --passwd=weijiajin&#13;
&#13;
/etc/init.d/sockd adduser USERNAME PASSWORD&#13;
sudo sed -i 's/del_uer/del_user/g' /etc/init.d/sockd&#13;
/etc/init.d/sockd deluser USERNAME&#13;
bash install.sh --uninstall&#13;
systemctl enable sockd.service&#13;
service sockd state&#13;
/etc/init.d/sockd state&#13;
```&#13;
**增加网卡**&#13;
```&#13;
ifconfig eth0:1 10.0.0.5 up&#13;
ifconfig eth0:2 10.0.0.6 up&#13;
```。</description><guid isPermaLink="true">https://weijiajin.com/post/jiao-ben.html</guid><pubDate>Mon, 08 Jul 2024 17:00:29 +0000</pubDate></item><item><title>JetBrains</title><link>https://weijiajin.com/post/JetBrains.html</link><description>## 新账号激活&#13;
&#13;
1. 购买正版激活链接，打开链接后显示如下界面，点击蓝色按钮&#13;
![image](https://github.com/wejudging/wejudging.github.io/assets/39000767/cddc3481-2deb-4463-a472-ebd397bad414)&#13;
2. 一直往下翻页，直到翻到最底下，右下角按钮颜色变深，点击按钮`I Accept`&#13;
![image](https://github.com/wejudging/wejudging.github.io/assets/39000767/82c8d388-49c9-442c-9757-3ae98fd08784)&#13;
3. 登录自己的账号，即可激活成功&#13;
![image](https://github.com/wejudging/wejudging.github.io/assets/39000767/78e6133f-da5a-44af-a322-a7bd94c93fe4)&#13;
4. 成功界面图&#13;
![image](https://github.com/wejudging/wejudging.github.io/assets/39000767/1f1b5f8d-0d46-4b08-bdca-20aa190410d3)。</description><guid isPermaLink="true">https://weijiajin.com/post/JetBrains.html</guid><pubDate>Thu, 04 Jul 2024 18:34:52 +0000</pubDate></item></channel></rss>