<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>weijiajin.com</title><link>https://weijiajin.com</link><description>你好哇，祝你今天愉快。</description><copyright>weijiajin.com</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://weijiajin.com/circle.svg</url><title>avatar</title><link>https://weijiajin.com</link></image><lastBuildDate>Wed, 15 Jan 2025 08:05:34 +0000</lastBuildDate><managingEditor>weijiajin.com</managingEditor><ttl>60</ttl><webMaster>weijiajin.com</webMaster><item><title>ARM架构机器运行AMD架构的docker镜像</title><link>https://weijiajin.com/post/ARM-jia-gou-ji-qi-yun-xing-AMD-jia-gou-de-docker-jing-xiang.html</link><description>### 安装 QEMU&#13;
```&#13;
sudo apt-get update&#13;
sudo apt-get install qemu qemu-user qemu-user-static&#13;
```&#13;
&#13;
### 安装 binfmt-support&#13;
```&#13;
sudo apt-get update&#13;
sudo apt-get install binfmt-support&#13;
```&#13;
&#13;
### 将 QEMU 模拟器注册到内核&#13;
```&#13;
sudo update-binfmts --enable&#13;
```&#13;
。</description><guid isPermaLink="true">https://weijiajin.com/post/ARM-jia-gou-ji-qi-yun-xing-AMD-jia-gou-de-docker-jing-xiang.html</guid><pubDate>Tue, 14 Jan 2025 18:06:10 +0000</pubDate></item><item><title>Hysteria2解锁ChatGPT</title><link>https://weijiajin.com/post/Hysteria2-jie-suo-ChatGPT.html</link><description>```yaml&#13;
outbounds:&#13;
  - name: ipv4&#13;
    type: direct&#13;
    direct:&#13;
      mode: 4&#13;
  - name: openai&#13;
    type: socks5&#13;
    socks5:&#13;
      addr: ip:端口&#13;
      username: 用户名&#13;
      password: 密码&#13;
acl:&#13;
  inline:&#13;
    - openai(suffix:chatgpt.com)&#13;
    - openai(suffix:openai.com)&#13;
    - openai(suffix:oaistatic.com)&#13;
    - openai(suffix:oaiusercontent.com)&#13;
    - openai(suffix:openai.com.cdn.cloudflare.net)&#13;
    - openai(suffix:openaiapi-site.azureedge.net)&#13;
    - openai(suffix:openaicom-api-bdcpf8c6d2e9atf6.z01.azurefd.net)&#13;
    - openai(suffix:openaicomproductionae4b.blob.core.windows.net)&#13;
    - openai(suffix:production-openaicom-storage.azureedge.net)&#13;
    - openai(suffix:claude.ai)&#13;
    - openai(suffix:anthropic.com)&#13;
    - openai(geosite:openai)&#13;
    - reject(geosite:google@ads)&#13;
&#13;
```&#13;
。</description><guid isPermaLink="true">https://weijiajin.com/post/Hysteria2-jie-suo-ChatGPT.html</guid><pubDate>Thu, 02 Jan 2025 10:18:30 +0000</pubDate></item><item><title>Xray分流解锁ChatGPT</title><link>https://weijiajin.com/post/Xray-fen-liu-jie-suo-ChatGPT.html</link><description>### route.json配置&#13;
```yaml&#13;
{&#13;
'rules': [&#13;
            {&#13;
                'type': 'field',&#13;
                'domain': [&#13;
                    'chatgpt.com',&#13;
                    'openai.com',&#13;
                    'oaistatic.com',&#13;
                    'oaiusercontent.com',&#13;
                    'openai.com.cdn.cloudflare.net',&#13;
                    'openaiapi-site.azureedge.net',&#13;
                    'openaicom-api-bdcpf8c6d2e9atf6.z01.azurefd.net',&#13;
                    'openaicomproductionae4b.blob.core.windows.net',&#13;
                    'production-openaicom-storage.azureedge.net',&#13;
                    'claude.ai',&#13;
                    'anthropic.com',&#13;
                    'gemini.google.com',&#13;
                    'proactivebackend-pa.googleapis.com',&#13;
                    'ai.google.dev',&#13;
                    'alkalimakersuite-pa.clients6.google.com',&#13;
                    'makersuite.google.com',&#13;
                    'bard.google.com',&#13;
                    'deepmind.com',&#13;
                    'deepmind.google',&#13;
                    'generativeai.google',&#13;
                    'apis.google.com' &#13;
                ],&#13;
                'outboundTag': 'chatgpt'&#13;
            }&#13;
        ]&#13;
}&#13;
```&#13;
&#13;
### outbound.json配置&#13;
```yaml&#13;
[&#13;
{&#13;
            'tag': 'direct',&#13;
            'protocol': 'freedom',&#13;
            'settings': {}&#13;
        },&#13;
 {&#13;
      'protocol': 'socks',&#13;
      'tag': 'chatgpt',&#13;
      'settings': {&#13;
        'servers': [&#13;
          {&#13;
            'address': 'ip',&#13;
            'port': 端口,&#13;
            'users': [&#13;
              {&#13;
                'user': '用户名',&#13;
                'pass': '密码',&#13;
                'level': 0&#13;
              }&#13;
            ]&#13;
          }&#13;
        ]&#13;
      }&#13;
    }&#13;
    ,&#13;
{&#13;
'protocol': 'blackhole',&#13;
'settings': {},&#13;
'tag': 'blocked'&#13;
}&#13;
]&#13;
```&#13;
。</description><guid isPermaLink="true">https://weijiajin.com/post/Xray-fen-liu-jie-suo-ChatGPT.html</guid><pubDate>Thu, 02 Jan 2025 10:07:55 +0000</pubDate></item><item><title>Cloudflare-Gost 服务配置</title><link>https://weijiajin.com/post/Cloudflare-Gost%20-fu-wu-pei-zhi.html</link><description>该服务基于 `wejudging/cloudflare-gost:latest` 镜像，结合了 Cloudflare 和 Gost，实现高效的代理功能。</description><guid isPermaLink="true">https://weijiajin.com/post/Cloudflare-Gost%20-fu-wu-pei-zhi.html</guid><pubDate>Thu, 02 Jan 2025 08:57:07 +0000</pubDate></item><item><title> 使用 NGINX 实现 SNI 识别和流量转发</title><link>https://weijiajin.com/post/%20-shi-yong-%20NGINX%20-shi-xian-%20SNI%20-shi-bie-he-liu-liang-zhuan-fa.html</link><description>在现代应用中，流量转发和域名解析是部署服务的关键环节。</description><guid isPermaLink="true">https://weijiajin.com/post/%20-shi-yong-%20NGINX%20-shi-xian-%20SNI%20-shi-bie-he-liu-liang-zhuan-fa.html</guid><pubDate>Thu, 02 Jan 2025 08:49:53 +0000</pubDate></item><item><title>破解Cloudflare Turnstile</title><link>https://weijiajin.com/post/po-jie-Cloudflare%20Turnstile.html</link><description>```&#13;
import pyautogui  # 用于自动控制鼠标和键盘&#13;
from DrissionPage import Chromium, ChromiumOptions  # DrissionPage 是一个用于浏览器自动化的库，Chromium 类用于控制 Chromium 浏览器&#13;
&#13;
# 1. 配置 Chromium 浏览器选项&#13;
co = ChromiumOptions().auto_port().incognito()&#13;
# - auto_port(): 自动配置端口&#13;
# - incognito(): 启用无痕模式，防止保存浏览历史和缓存&#13;
&#13;
# 2. 启动浏览器&#13;
browser = Chromium(addr_or_opts=co)&#13;
# - addr_or_opts=co：传入浏览器配置选项&#13;
&#13;
# 3. 获取浏览器当前标签页&#13;
tab = browser.get_tab()&#13;
&#13;
# 4. 打开目标页面&#13;
url = 'https://core.particle.network/cloudflare.html?language=en&amp;theme=light&amp;_=0.1.1&amp;siteKey=0x4AAAAAAAaHm6FnzyhhmePw'&#13;
tab.get(url, retry=3, interval=30, timeout=30)&#13;
# - retry=3: 如果加载失败，最多重试 3 次&#13;
# - interval=30: 每次重试之间的间隔 30 秒&#13;
# - timeout=30: 最大等待时间 30 秒&#13;
&#13;
# 5. 获取 Cloudflare Turnstile 验证的 shadow DOM 元素&#13;
shadow_root_ele1 = tab.ele('x://*[@id='cf-turnstile']/div').shadow_root&#13;
# - 通过 XPath 找到包含验证码的元素：//*[@id='cf-turnstile']/div&#13;
# - shadow_root：获取该元素的 shadow DOM 根节点&#13;
&#13;
# 6. 在 shadow DOM 中找到 iframe 元素&#13;
iframe1 = shadow_root_ele1.ele('t:iframe')&#13;
# - ele('t:iframe'): 通过标签名 'iframe' 获取子元素&#13;
&#13;
# 7. 等待 2 秒，确保页面和 iframe 加载完成&#13;
tab.wait(2)&#13;
&#13;
# 8. 获取 iframe 内部的 shadow DOM&#13;
shadow_root_ele2 = iframe1('x:/html/body').shadow_root&#13;
# - 通过 XPath 'x:/html/body' 定位 iframe 内部的 body 元素&#13;
# - shadow_root：获取该元素的 shadow DOM 根节点&#13;
&#13;
# 9. 在 shadow DOM 内找到 'Verify you are human' 的验证元素&#13;
verify_element = shadow_root_ele2.ele('Verify you are human')&#13;
# - ele('Verify you are human'): 查找包含文本的元素&#13;
&#13;
# 10. 计算目标元素在屏幕和页面中的位置&#13;
screen_x, screen_y = verify_element.rect.screen_location  # 获取元素在屏幕上的位置坐标&#13;
page_x, page_y = tab.rect.page_location  # 获取标签页的左上角坐标&#13;
&#13;
# 11. 计算鼠标点击位置&#13;
click_x, click_y = (screen_x + page_x - 20, screen_y - page_y - 5)&#13;
# - 调整坐标位置：&#13;
#   - screen_x + page_x - 20: 向左微调 20 像素&#13;
#   - screen_y - page_y - 5: 向上微调 5 像素&#13;
&#13;
# 12. 使用 pyautogui 控制鼠标移动和点击&#13;
pyautogui.moveTo(click_x, click_y, duration=0.01, tween=pyautogui.easeInElastic)&#13;
# - moveTo(): 移动鼠标到指定坐标&#13;
# - duration=0.01: 鼠标移动时间为 0.01 秒&#13;
# - tween=pyautogui.easeInElastic: 设置鼠标移动的缓动效果&#13;
&#13;
pyautogui.click(clicks=3)&#13;
# - click(clicks=3): 点击鼠标 3 次&#13;
```。</description><guid isPermaLink="true">https://weijiajin.com/post/po-jie-Cloudflare%20Turnstile.html</guid><pubDate>Wed, 18 Dec 2024 22:00:41 +0000</pubDate></item><item><title>Go语言圣经</title><link>https://weijiajin.com/post/Go-yu-yan-sheng-jing.html</link><description>## 1.1. Hello, World&#13;
&#13;
我们以现已成为传统的“hello world”案例来开始吧，这个例子首次出现于 1978 年出版的 C 语言圣经 [《The C Programming Language》](http://s3-us-west-2.amazonaws.com/belllabs-microsite-dritchie/cbook/index.html)（译注：本书作者之一 Brian W. Kernighan 也是《The C Programming Language》一书的作者）。</description><guid isPermaLink="true">https://weijiajin.com/post/Go-yu-yan-sheng-jing.html</guid><pubDate>Sun, 24 Nov 2024 10:43:48 +0000</pubDate></item><item><title>自动驾驶</title><link>https://weijiajin.com/post/zi-dong-jia-shi.html</link><description>### 一、什么是自动驾驶？&#13;
&#13;
自动驾驶指的是利用先进的传感器、计算机视觉、人工智能和自动化控制技术，让汽车能够在无需人工干预的情况下自主行驶。</description><guid isPermaLink="true">https://weijiajin.com/post/zi-dong-jia-shi.html</guid><pubDate>Wed, 20 Nov 2024 06:54:38 +0000</pubDate></item><item><title>言吾GPT使用说明</title><link>https://weijiajin.com/post/yan-wu-GPT-shi-yong-shuo-ming.html</link><description>### 游客免登&#13;
20次/小时普通模型 免费&#13;
&#13;
### 注册用户&#13;
40次/小时普通模型 免费&#13;
&#13;
### Plus用户&#13;
80次/小时高级模型 付费&#13;
&#13;
### 售后交流群&#13;
联系客服加群（微信号）：`weijiajin-com`&#13;
&#13;
### 售后邮箱&#13;
`admin@weijiajin.com`。</description><guid isPermaLink="true">https://weijiajin.com/post/yan-wu-GPT-shi-yong-shuo-ming.html</guid><pubDate>Tue, 19 Nov 2024 20:08:55 +0000</pubDate></item><item><title>正版MATLAB教程</title><link>https://weijiajin.com/post/zheng-ban-MATLAB-jiao-cheng.html</link><description>### MATLAB 下载&#13;
&#13;
1. 浏览器打开官网 [https://ww2.mathworks.cn](https://ww2.mathworks.cn)，点击右上角登录&#13;
![image](https://github.com/user-attachments/assets/628995a6-178b-44f7-9863-9e934788ee58)&#13;
&#13;
2. 输入正版账号与密码进行登录&#13;
![image](https://github.com/user-attachments/assets/816d6085-c88f-46de-9497-019d67a67534)&#13;
&#13;
3. 登录成功后，点击右上角，我的账户&#13;
![image](https://github.com/user-attachments/assets/294ddcd5-132f-4cf5-a9fb-c90577f1d482)&#13;
&#13;
4. 点击我的账户页面的下载按钮&#13;
![image](https://github.com/user-attachments/assets/bfdca1f8-db43-4e1a-baef-93ef69a082ce)&#13;
&#13;
5. 安装下载&#13;
![image](https://github.com/user-attachments/assets/35b747ef-23cd-4108-81a9-f20f607c3082)&#13;
&#13;
6. 安装说明&#13;
![image](https://github.com/user-attachments/assets/13363d66-4c7e-496d-b009-bfc14645e79d)&#13;
&#13;
&#13;
### MATLAB 安装&#13;
&#13;
1. 打开安装包后，会解压一个临时文件夹 `_temp_matlab_R2022a_win64`&#13;
![image](https://github.com/user-attachments/assets/62ae0b4d-f044-4caa-871b-4baf6348930e)&#13;
&#13;
2. 第一次解压会自动打开`_temp_matlab_R2022a_win64`里面的`setup.exe`&#13;
![image](https://github.com/user-attachments/assets/067a08cb-f1bd-4dac-8e14-71818a4a3763)&#13;
&#13;
3. 正常安装登录界面，输入正版账号密码&#13;
![image](https://github.com/user-attachments/assets/30a31095-e20e-4aad-a041-68844134e4f4)&#13;
&#13;
4. 如果第一次安装失败，需要重新安装的时候，只需关闭`matlab`安装程序&#13;
![image](https://github.com/user-attachments/assets/68f9401b-14d1-4063-abd8-ae8239195e32)&#13;
&#13;
5. 重新打开临时文件夹`_temp_matlab_R2022a_win64`里面的`setup.exe`重新安装&#13;
![image](https://github.com/user-attachments/assets/7b8d5881-012a-4041-9949-fb628181c72b)&#13;
&#13;
6. 如果仍然打开`matlab_R2022a_win64.exe`可能或出现重复解压的报错，建议删除临时文件夹`_temp_matlab_R2022a_win64`，重新打开`matlab_R2022a_win64.exe`&#13;
![image](https://github.com/user-attachments/assets/f270798f-874d-4c85-9e4d-e8ab334dacbb)&#13;
&#13;
7. 同意协议，下一步&#13;
![image](https://github.com/user-attachments/assets/07df7835-640f-4c0c-a56f-0f7046e66f3d)&#13;
&#13;
8. 选择许可证，点击下一步&#13;
![image](https://github.com/user-attachments/assets/1bc06cc1-6b1d-4c9c-9fab-da959ca40eda)&#13;
&#13;
9. 登录名Windows系统用户要特别注意正版系统会自动填写相应用户名默认下一步&#13;
![image](https://github.com/user-attachments/assets/f1205db5-2280-45d8-b8b8-916c1a469dea)&#13;
&#13;
10. 破解版系统 ，登录名会显示空白需要手动填写，一般要填写`Administrator`&#13;
&#13;
11. 如果自动填写，默认下一步 ，只有登录名显示空白才需要手动填写&#13;
&#13;
12. 破解版系统 ，登录名会显示空白需要手动填写，一般要填写`Administrator`&#13;
&#13;
13. 选择需要安装的库与工具包，建议全选，虽下载文件大点，但省事&#13;
![image](https://github.com/user-attachments/assets/4f4e60e6-320f-45d1-aafc-6580cf516705)&#13;
&#13;
14. 默认下一步，开始安装，等待安装成功&#13;
![image](https://github.com/user-attachments/assets/5da3ab34-2378-443f-91e9-529d0902509d)&#13;
&#13;
15. 安装成功&#13;
![image](https://github.com/user-attachments/assets/cd419238-e0d4-4e14-8d95-a9a867133d92)&#13;
&#13;
&#13;
### 常用界面 &#13;
&#13;
1. 官网软件包下载&#13;
[https://ww2.mathworks.cn/downloads](https://ww2.mathworks.cn/downloads)&#13;
![image](https://github.com/user-attachments/assets/fe9f6eca-b616-43d1-9e2e-4558e3f385ae)&#13;
&#13;
2. 密码更改&#13;
[https://ww2.mathworks.cn/mwaccount/profiles/password/change](https://ww2.mathworks.cn/mwaccount/profiles/password/change)&#13;
![image](https://github.com/user-attachments/assets/664f746f-5b80-410f-aba4-19d0936cfba7)&#13;
&#13;
3. 双重验证&#13;
[https://ww2.mathworks.cn/mwaccount/profiles/security/two_step_verification](https://ww2.mathworks.cn/mwaccount/profiles/security/two_step_verification)&#13;
![image](https://github.com/user-attachments/assets/35df31b4-d0ea-45ff-b3f1-42e901308b60)&#13;
&#13;
4. `Matlab Online`&#13;
[https://matlab.mathworks.com/](https://matlab.mathworks.com/)&#13;
![image](https://github.com/user-attachments/assets/96131df7-a0fe-4d26-9736-f538d1eab4a4)&#13;
&#13;
### 无法连接 Internet 的电脑上进行产品安装和激活&#13;
[https://ww2.mathworks.cn/matlabcentral/answers/130613-internet](https://ww2.mathworks.cn/matlabcentral/answers/130613-internet)&#13;
&#13;
### MATLAB 工具库下载&#13;
&#13;
1. 打开软件点击右上角登录正版账号，点击主页，点击附加功能，点击获取附加功能&#13;
![image](https://github.com/user-attachments/assets/999b7bd0-29f3-4b7b-8846-9b5678ea63c4)&#13;
&#13;
2. 在右上角的搜索框中搜索自己想要下载的库或者工具箱&#13;
![image](https://github.com/user-attachments/assets/d14c01b1-64cf-453c-960a-7dd146fece27)&#13;
&#13;
MATLAB 激活与反激活&#13;
&#13;
1. 如果之前使用过其他账号授权激活的，请参考以下步骤进行反激活与激活&#13;
![image](https://github.com/user-attachments/assets/c912f216-c58b-48b7-a90f-da4fa9acde1a)&#13;
&#13;
2. 在使用我们正版账号激活之前，是要把之前电脑的所有许可证反激活的&#13;
![image](https://github.com/user-attachments/assets/28ae997a-9df6-43ce-9189-91ebd6fe3dad)&#13;
&#13;
3. 反激活之后，打开开始菜单，打开 Activate MATLAB R2022a&#13;
![image](https://github.com/user-attachments/assets/846be8cc-a663-4366-b24e-ac7ce500636c)&#13;
。</description><guid isPermaLink="true">https://weijiajin.com/post/zheng-ban-MATLAB-jiao-cheng.html</guid><pubDate>Thu, 19 Sep 2024 06:46:25 +0000</pubDate></item><item><title>JetBrains正版激活</title><link>https://weijiajin.com/post/JetBrains-zheng-ban-ji-huo.html</link><description>### 1.购买正版激活链接，打开链接后显示如下界面，点击蓝色按钮&#13;
![image](https://github.com/user-attachments/assets/5b657f10-5dfd-4724-9b34-be8d8a1c2f2a)&#13;
### 2.一直往下翻页，直到翻到最底下，右下角按钮颜色变深，点击按钮`I Accept`&#13;
![image](https://github.com/user-attachments/assets/ffa46b29-2a49-4ff4-925c-8f01c7048205)&#13;
### 3.登录自己的账号，即可激活成功&#13;
![image](https://github.com/user-attachments/assets/544a1b21-626e-4bb4-b70b-79b3d76f03b3)&#13;
### 4.成功界面图&#13;
![image](https://github.com/user-attachments/assets/96b4db42-8b57-4f91-88e4-2fee0b09848d)&#13;
### 5.官网下载软件，点击安装后打开如下，点击登录账号激活&#13;
![image](https://github.com/user-attachments/assets/06ea8d82-4cab-468d-8117-bec4412b6bed)&#13;
### 6.登录已经正版授权成功的账号后，点击激活&#13;
![image](https://github.com/user-attachments/assets/32f3ab1d-51ee-4346-8679-cca9a02c474d)&#13;
### 7.成功界面&#13;
![image](https://github.com/user-attachments/assets/95c1c8e2-827c-4dac-b129-46671128f721)&#13;
## 常见问题&#13;
###  成品账号更改密码&#13;
https://account.jetbrains.com/change-password&#13;
###  成品账号更改邮箱&#13;
https://account.jetbrains.com/profile-details。</description><guid isPermaLink="true">https://weijiajin.com/post/JetBrains-zheng-ban-ji-huo.html</guid><pubDate>Fri, 13 Sep 2024 02:24:51 +0000</pubDate></item><item><title>JetBrains重置账号</title><link>https://weijiajin.com/post/JetBrains-zhong-zhi-zhang-hao.html</link><description>### 登录账号&#13;
![image](https://github.com/user-attachments/assets/cc3cc106-5a5e-4a59-839a-a6024c3f47bd)&#13;
### 点击管理账号&#13;
![image](https://github.com/user-attachments/assets/455db585-ac82-45d8-9f98-1049b2bc22b6)&#13;
### 点击删除Jetbrains账户&#13;
![image](https://github.com/user-attachments/assets/ce46ca24-7ece-4b31-8693-8de7af0e9f20)&#13;
### 重新注册账号，可以使用原账户和原密码&#13;
![image](https://github.com/user-attachments/assets/7aeb5dee-cbd9-44ff-b109-483139c9f040)。</description><guid isPermaLink="true">https://weijiajin.com/post/JetBrains-zhong-zhi-zhang-hao.html</guid><pubDate>Fri, 13 Sep 2024 02:07:37 +0000</pubDate></item><item><title>DrissionPage</title><link>https://weijiajin.com/post/DrissionPage.html</link><description>### ✨️ 概述&#13;
&#13;
DrissionPage 是一个基于 python 的网页自动化工具。</description><guid isPermaLink="true">https://weijiajin.com/post/DrissionPage.html</guid><pubDate>Wed, 10 Jul 2024 11:46:31 +0000</pubDate></item><item><title>常用Linux命令</title><link>https://weijiajin.com/post/chang-yong-Linux-ming-ling.html</link><description>**开启root远程登录2**&#13;
&#13;
```bash&#13;
sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config&#13;
sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config&#13;
systemctl restart sshd&#13;
```&#13;
&#13;
**官网安装docker**&#13;
```bash&#13;
curl -fsSL https://get.docker.com | bash -s docker&#13;
systemctl start docker&#13;
systemctl enable docker&#13;
```&#13;
&#13;
**国内安装docker**&#13;
```bash&#13;
bash &lt;(curl -sSL https://linuxmirrors.cn/docker.sh)&#13;
systemctl start docker&#13;
systemctl enable docker&#13;
```&#13;
&#13;
**BBR-PLUS脚本**&#13;
```bash&#13;
bash &lt;(curl -Lso- https://git.io/kernel.sh)&#13;
```&#13;
&#13;
**centos关闭防火墙**&#13;
```bash&#13;
systemctl stop firewalld&#13;
systemctl disable firewalld&#13;
```&#13;
&#13;
**swap**&#13;
```bash&#13;
wget https://www.moerats.com/usr/shell/swap.sh &amp;&amp; bash swap.sh&#13;
azure swap&#13;
dd if=/dev/zero of=/swapfile count=4096 bs=1M&#13;
chmod 600 /swapfile&#13;
mkswap /swapfile&#13;
swapon /swapfile&#13;
vi /etc/fstab&#13;
/swapfile   none    swap    sw    0   0&#13;
```&#13;
&#13;
**myip**&#13;
```bash&#13;
ip=$(curl -s http://myip.ipip.net)&#13;
echo 'My public IP address is: $ip'&#13;
```&#13;
&#13;
**danate**&#13;
```bash&#13;
wget --no-check-certificate https://raw.github.com/Lozy/danted/master/install.sh -O install.sh&#13;
bash install.sh  --port=18888 --user=weijiajin --passwd=weijiajin&#13;
&#13;
/etc/init.d/sockd adduser USERNAME PASSWORD&#13;
sudo sed -i 's/del_uer/del_user/g' /etc/init.d/sockd&#13;
/etc/init.d/sockd deluser USERNAME&#13;
bash install.sh --uninstall&#13;
systemctl enable sockd.service&#13;
service sockd state&#13;
/etc/init.d/sockd state&#13;
```&#13;
&#13;
**增加网卡**&#13;
```bash&#13;
ifconfig eth0:1 10.0.0.5 up&#13;
ifconfig eth0:2 10.0.0.6 up&#13;
```&#13;
&#13;
**x-ui**&#13;
```bash&#13;
bash &lt;(curl -Ls https://raw.githubusercontent.com/vaxilu/x-ui/master/install.sh)&#13;
```&#13;
**重装系统 Debain12**&#13;
```bash&#13;
apt install wget -y&#13;
wget --no-check-certificate -qO InstallNET.sh 'https://raw.githubusercontent.com/leitbogioro/Tools/master/Linux_reinstall/InstallNET.sh' &amp;&amp; chmod a+x InstallNET.sh&#13;
bash InstallNET.sh -debian&#13;
&#13;
For Linux: LeitboGi0ro&#13;
```&#13;
&#13;
**debian10安装docker**&#13;
```bash&#13;
sudo apt-get update&#13;
sudo apt-get install \&#13;
    apt-transport-https \&#13;
    ca-certificates \&#13;
    curl \&#13;
    gnupg2 \&#13;
    software-properties-common&#13;
y&#13;
curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg&#13;
echo \ 'deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian \&#13;
  $(lsb_release -cs) stable' | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null&#13;
&#13;
sudo apt-get update&#13;
sudo apt-get install docker-ce docker-ce-cli containerd.io&#13;
y&#13;
git clone https://github.com/wejudging/x-ui.git&#13;
cd x-ui&#13;
docker compose up -d&#13;
```&#13;
&#13;
**重装系统Debain12**&#13;
```&#13;
curl -O https://raw.githubusercontent.com/bin456789/reinstall/main/reinstall.sh || wget -O reinstall.sh $_&#13;
bash reinstall.sh debian 12 --password password&#13;
```&#13;
&#13;
**下载新的yum源**&#13;
```&#13;
wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.cloud.tencent.com/repo/centos6_base.repo&#13;
```&#13;
&#13;
**清除yum缓存并更新**&#13;
```&#13;
yum clean all&#13;
yum makecache&#13;
```&#13;
&#13;
debian10安装x-ui&#13;
```&#13;
commands = [&#13;
        'sudo apt-get update',&#13;
        'sudo apt-get install apt-transport-https -y',&#13;
        'sudo apt-get install ca-certificates -y',&#13;
        'sudo apt-get install curl -y',&#13;
        'sudo apt-get install gnupg2 -y',&#13;
        'sudo apt-get install software-properties-common -y',&#13;
        'curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg',&#13;
        'echo \'deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable\' | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null',&#13;
        'sudo apt-get update',&#13;
        'sudo apt-get install docker-ce docker-ce-cli containerd.io -y',&#13;
        'git clone https://github.com/wejudging/x-ui.git',&#13;
        'cd /root/x-ui &amp;&amp; docker compose up -d'&#13;
    ]&#13;
```&#13;
&#13;
&#13;
。</description><guid isPermaLink="true">https://weijiajin.com/post/chang-yong-Linux-ming-ling.html</guid><pubDate>Mon, 08 Jul 2024 17:00:29 +0000</pubDate></item><item><title>jetbrains</title><link>https://weijiajin.com/post/jetbrains.html</link><description>### 新账号激活&#13;
**1.打开购买的正版链接后显示如下界面,点击蓝色按钮**&#13;
![image](https://github.com/wejudging/wejudging.github.io/assets/39000767/cddc3481-2deb-4463-a472-ebd397bad414)&#13;
**2.一直往下翻页,直到翻到最底下,右下角按钮颜色变深,点击按钮`I Accept`**&#13;
![image](https://github.com/wejudging/wejudging.github.io/assets/39000767/82c8d388-49c9-442c-9757-3ae98fd08784)&#13;
**3.登录自己的账号(之前没注册过教育优惠),即可激活成功**&#13;
![image](https://github.com/wejudging/wejudging.github.io/assets/39000767/78e6133f-da5a-44af-a322-a7bd94c93fe4)&#13;
**4.成功界面**&#13;
![image](https://github.com/wejudging/wejudging.github.io/assets/39000767/5ee164c8-6f20-40cc-85fc-d0203cdd4d48)。</description><guid isPermaLink="true">https://weijiajin.com/post/jetbrains.html</guid><pubDate>Thu, 04 Jul 2024 18:34:52 +0000</pubDate></item></channel></rss>